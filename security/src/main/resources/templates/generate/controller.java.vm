package ${package.Controller};

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.xs.example.demo.web_common.common.validated.Insert;
import com.xs.example.demo.web_common.common.validated.Update;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import com.xs.example.demo.web_common.pojo.vo.Result;
import lombok.extern.slf4j.Slf4j;
/**
 *  @description : ${entity} 控制器
 *  ---------------------------------
 *   @author ${author}
 *  @since ${date}
 */
@Slf4j
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;

    /**
     * @description : 获取分页列表
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @PostMapping("/list")
    public Result<IPage<${entity}>> get${entity}List(@RequestParam(value = "page",defaultValue = "1") Integer page,
        @RequestParam(value = "size",defaultValue = "10") Integer size) {
        Page<${entity}> ${table.entityPath}page = new Page<>(page,size);
        return Result.ok(${table.entityPath}Service.page(${table.entityPath}page,null));
    }

    /**
     * @description : 通过id获取${entity}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @GetMapping("/get/{id}")
    public Result<${entity}> get${entity}ById(@PathVariable(value = "id") String id) {
        try {
            ${entity} param= ${table.entityPath}Service.getById(id);
            return Result.ok(param);
        } catch (Exception e) {
            log.info("异常信息:{}"+e.getMessage());
            return Result.fail("获取信息失败");
        }
    }

    /**
     * @description : 通过id删除${entity}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @PostMapping("/delete/{id}")
    public Result delete${entity}ById(@PathVariable(value = "id") String id) {
        List<Integer> list = Arrays.asList(id.split(",")).stream().map(Integer::parseInt).collect(Collectors.toList());
        try{
            if (${table.entityPath}Service.removeByIds(list)){
                return Result.ok();
            } else {
                return Result.fail();
            }
        } catch (Exception e) {
            log.info("异常信息:{}"+e.getMessage());
            return Result.fail("删除信息失败");
        }
    }

    /**
     * @description : 更新${entity}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @PostMapping("/update")
    public Result update${entity}ById(@Validated({Update.class}) ${entity} param) {
        try{
            if (${table.entityPath}Service.updateById(param)){
                return Result.ok();
            } else {
                return Result.fail();
            }
        } catch (Exception e) {
            log.info("异常信息:{}"+e.getMessage());
            return Result.fail("修改信息失败");
        }
    }

    /**
     * @description : 新增${entity}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @PostMapping("/add")
    public Result add${entity}(@Validated({Insert.class}) ${entity} param) {
        try{
            if (${table.entityPath}Service.save(param)){
                return Result.ok(param);
            } else {
            return Result.fail();
            }
        } catch (Exception e) {
            log.info("异常信息:{}"+e.getMessage());
            return Result.fail("添加信息失败", e);
        }
    }
}